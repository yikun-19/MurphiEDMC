invariant "test_1"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = INVALID);

invariant "test_2"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = VALID);

invariant "test_3"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = DIRTY);

invariant "test_4"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = VALID & node[4].cache[1].state = INVALID);

invariant "test_5"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = VALID & node[4].cache[1].state = VALID);

invariant "test_6"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = DIRTY & node[4].cache[1].state = INVALID);

invariant "test_7"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = VALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = INVALID);

invariant "test_8"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = VALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = VALID);

invariant "test_9"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = VALID & node[3].cache[1].state = VALID & node[4].cache[1].state = INVALID);

invariant "test_10"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = VALID & node[3].cache[1].state = VALID & node[4].cache[1].state = VALID);

invariant "test_11"
  !(node[1].cache[1].state = INVALID & node[2].cache[1].state = DIRTY & node[3].cache[1].state = INVALID & node[4].cache[1].state = INVALID);

invariant "test_12"
  !(node[1].cache[1].state = VALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = INVALID);

invariant "test_13"
  !(node[1].cache[1].state = VALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = VALID);

invariant "test_14"
  !(node[1].cache[1].state = VALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = VALID & node[4].cache[1].state = INVALID);

invariant "test_15"
  !(node[1].cache[1].state = VALID & node[2].cache[1].state = INVALID & node[3].cache[1].state = VALID & node[4].cache[1].state = VALID);

invariant "test_16"
  !(node[1].cache[1].state = VALID & node[2].cache[1].state = VALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = INVALID);

invariant "test_17"
  !(node[1].cache[1].state = VALID & node[2].cache[1].state = VALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = VALID);

invariant "test_18"
  !(node[1].cache[1].state = VALID & node[2].cache[1].state = VALID & node[3].cache[1].state = VALID & node[4].cache[1].state = INVALID);

invariant "test_19"
  !(node[1].cache[1].state = VALID & node[2].cache[1].state = VALID & node[3].cache[1].state = VALID & node[4].cache[1].state = VALID);

invariant "test_20"
  !(node[1].cache[1].state = DIRTY & node[2].cache[1].state = INVALID & node[3].cache[1].state = INVALID & node[4].cache[1].state = INVALID);


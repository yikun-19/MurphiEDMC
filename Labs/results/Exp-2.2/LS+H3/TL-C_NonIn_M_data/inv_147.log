This program should be regarded as a DEBUGGING aid, not as a 
certifier of correctness.
Call with the -l flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.

Bugs, questions, and comments should be directed to
"melatti@di.uniroma1.it".

CMurphi compiler last modified date: Apr 18 2024
Include files last modified date:    Jul 23 2021
==========================================================================

==========================================================================
Caching Murphi Release 5.5.0
Finite-state Concurrent System Verifier.

Caching Murphi Release 5.5.0 is based on various versions of Murphi.
Caching Murphi Release 5.5.0 :
Copyright (C) 2009-2012 by Sapienza University of Rome.
Murphi release 3.1 :
Copyright (C) 1992 - 1999 by the Board of Trustees of
Leland Stanford Junior University.

==========================================================================

Protocol: ./protocols/exec/TL-C_NonIn_M_data/TL-C_NonIn_M_data_inv147
===========================================
  You are using LS algorithm.  
===========================================

===== Startstates are generated! =====
Carelist Layer 0: Tree[1].cache[1].state Tree[2].cache[1].state Tree[3].cache[1].state Tree[4].cache[1].state Tree[5].cache[1].state Tree[6].cache[1].state Tree[7].cache[1].state 
Carelist Layer 1: Tree[node].chanA[node].opcode Tree[node].chanA[node].para Tree[node].chanA[node].addr Tree[node].cache[node].state Tree[node].directory[node][node] Tree[node].master_pending[node] Tree[node].chanC[node].opcode Tree[node].chanB[node].opcode Tree[node].chanB[node].para Tree[node].chanB[node].addr Tree[node].chanD[node].opcode Tree[node].chanD[node].para Tree[node].chanD[node].addr Tree[node].chanC[node].para Tree[node].chanC[node].addr Tree[node].slave_pending[node][node] 
Carelist Layer 2: Tree[node].chanE[node].opcode Tree[node].chanE[node].addr 
Attr: Tree[node].chanE[node].opcode Level: 2 Wi: 2
Attr: Tree[node].chanC[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanC[node].para Level: 1 Wi: 4
Attr: Tree[node].chanD[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanD[node].opcode Level: 1 Wi: 4
Attr: Tree[node].slave_pending[node][node] Level: 1 Wi: 4
Attr: Tree[6].cache[1].state Level: 0 Wi: 8
Attr: Tree[2].cache[1].state Level: 0 Wi: 8
Attr: Tree[5].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanB[node].addr Level: 1 Wi: 4
Attr: Tree[4].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanD[node].para Level: 1 Wi: 4
Attr: Tree[node].master_pending[node] Level: 1 Wi: 4
Attr: Tree[3].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].cache[node].state Level: 1 Wi: 4
Attr: Tree[7].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanA[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanA[node].para Level: 1 Wi: 4
Attr: Tree[node].directory[node][node] Level: 1 Wi: 4
Attr: Tree[node].chanA[node].addr Level: 1 Wi: 4
Attr: Tree[1].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanC[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanB[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanE[node].addr Level: 2 Wi: 2
Attr: Tree[node].chanB[node].para Level: 1 Wi: 4

===== Init heuristics! =====

Progress Report:

	100000 states explored in 9.72s, with 501351 rules fired and 94895 states in the queue.
	200000 states explored in 16.78s, with 984087 rules fired and 188971 states in the queue.
	300000 states explored in 24.17s, with 1501349 rules fired and 283448 states in the queue.
	400000 states explored in 31.42s, with 2001340 rules fired and 377600 states in the queue.
	500000 states explored in 38.67s, with 2502209 rules fired and 471711 states in the queue.
	600000 states explored in 45.94s, with 3000514 rules fired and 565241 states in the queue.
	700000 states explored in 53.15s, with 3493218 rules fired and 658324 states in the queue.
	800000 states explored in 60.37s, with 3982795 rules fired and 751858 states in the queue.
	900000 states explored in 67.62s, with 4475129 rules fired and 845304 states in the queue.
	1000000 states explored in 74.97s, with 4976038 rules fired and 939032 states in the queue.
	1100000 states explored in 82.48s, with 5492518 rules fired and 1032775 states in the queue.
	1200000 states explored in 89.78s, with 5997794 rules fired and 1126925 states in the queue.
	1300000 states explored in 97.16s, with 6509764 rules fired and 1221116 states in the queue.
	1400000 states explored in 104.60s, with 7027586 rules fired and 1315063 states in the queue.
	1500000 states explored in 112.04s, with 7541276 rules fired and 1409060 states in the queue.
	1600000 states explored in 119.55s, with 8065521 rules fired and 1503105 states in the queue.
	1700000 states explored in 126.97s, with 8584681 rules fired and 1596993 states in the queue.
	1800000 states explored in 134.51s, with 9111042 rules fired and 1690843 states in the queue.
	1900000 states explored in 142.06s, with 9639988 rules fired and 1784627 states in the queue.
	2000000 states explored in 149.24s, with 10130289 rules fired and 1878243 states in the queue.
	2100000 states explored in 156.39s, with 10617570 rules fired and 1971548 states in the queue.
	2200000 states explored in 163.57s, with 11105781 rules fired and 2065026 states in the queue.
	2300000 states explored in 170.89s, with 11606950 rules fired and 2158498 states in the queue.
	2400000 states explored in 178.14s, with 12103853 rules fired and 2252179 states in the queue.
	2500000 states explored in 185.50s, with 12606469 rules fired and 2346091 states in the queue.
	2600000 states explored in 192.70s, with 13094056 rules fired and 2439699 states in the queue.
	2700000 states explored in 199.84s, with 13576350 rules fired and 2532578 states in the queue.

Error:

	Internal Error: Too many active states.




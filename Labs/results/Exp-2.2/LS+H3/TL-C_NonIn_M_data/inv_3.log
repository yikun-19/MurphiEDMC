This program should be regarded as a DEBUGGING aid, not as a 
certifier of correctness.
Call with the -l flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.

Bugs, questions, and comments should be directed to
"melatti@di.uniroma1.it".

CMurphi compiler last modified date: Apr 18 2024
Include files last modified date:    Jul 23 2021
==========================================================================

==========================================================================
Caching Murphi Release 5.5.0
Finite-state Concurrent System Verifier.

Caching Murphi Release 5.5.0 is based on various versions of Murphi.
Caching Murphi Release 5.5.0 :
Copyright (C) 2009-2012 by Sapienza University of Rome.
Murphi release 3.1 :
Copyright (C) 1992 - 1999 by the Board of Trustees of
Leland Stanford Junior University.

==========================================================================

Protocol: ./protocols/exec/TL-C_NonIn_M_data/TL-C_NonIn_M_data_inv3
===========================================
  You are using LS algorithm.  
===========================================

===== Startstates are generated! =====
Carelist Layer 0: Tree[1].cache[1].state Tree[2].cache[1].state Tree[3].cache[1].state Tree[4].cache[1].state Tree[5].cache[1].state Tree[6].cache[1].state Tree[7].cache[1].state 
Carelist Layer 1: Tree[node].chanA[node].opcode Tree[node].chanA[node].para Tree[node].chanA[node].addr Tree[node].cache[node].state Tree[node].directory[node][node] Tree[node].master_pending[node] Tree[node].chanC[node].opcode Tree[node].chanB[node].opcode Tree[node].chanB[node].para Tree[node].chanB[node].addr Tree[node].chanD[node].opcode Tree[node].chanD[node].para Tree[node].chanD[node].addr Tree[node].chanC[node].para Tree[node].chanC[node].addr Tree[node].slave_pending[node][node] 
Carelist Layer 2: Tree[node].chanE[node].opcode Tree[node].chanE[node].addr 
Attr: Tree[node].chanE[node].opcode Level: 2 Wi: 2
Attr: Tree[node].chanC[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanC[node].para Level: 1 Wi: 4
Attr: Tree[node].chanD[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanD[node].opcode Level: 1 Wi: 4
Attr: Tree[node].slave_pending[node][node] Level: 1 Wi: 4
Attr: Tree[6].cache[1].state Level: 0 Wi: 8
Attr: Tree[2].cache[1].state Level: 0 Wi: 8
Attr: Tree[5].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanB[node].addr Level: 1 Wi: 4
Attr: Tree[4].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanD[node].para Level: 1 Wi: 4
Attr: Tree[node].master_pending[node] Level: 1 Wi: 4
Attr: Tree[3].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].cache[node].state Level: 1 Wi: 4
Attr: Tree[7].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanA[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanA[node].para Level: 1 Wi: 4
Attr: Tree[node].directory[node][node] Level: 1 Wi: 4
Attr: Tree[node].chanA[node].addr Level: 1 Wi: 4
Attr: Tree[1].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanC[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanB[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanE[node].addr Level: 2 Wi: 2
Attr: Tree[node].chanB[node].para Level: 1 Wi: 4

===== Init heuristics! =====

Progress Report:

	100000 states explored in 10.21s, with 561263 rules fired and 94633 states in the queue.
	200000 states explored in 18.12s, with 1107625 rules fired and 189937 states in the queue.
	300000 states explored in 25.69s, with 1650181 rules fired and 284568 states in the queue.
	400000 states explored in 34.31s, with 2257947 rules fired and 378420 states in the queue.
	500000 states explored in 42.40s, with 2823064 rules fired and 472520 states in the queue.
	600000 states explored in 51.38s, with 3414896 rules fired and 566121 states in the queue.
	700000 states explored in 59.31s, with 3976711 rules fired and 660160 states in the queue.
	800000 states explored in 67.45s, with 4527129 rules fired and 755401 states in the queue.
	900000 states explored in 75.03s, with 5066110 rules fired and 850349 states in the queue.
	1000000 states explored in 82.82s, with 5630715 rules fired and 945281 states in the queue.
	1100000 states explored in 90.26s, with 6164753 rules fired and 1039885 states in the queue.
	1200000 states explored in 97.96s, with 6720856 rules fired and 1134737 states in the queue.
	1300000 states explored in 105.77s, with 7278807 rules fired and 1229306 states in the queue.
	1400000 states explored in 113.56s, with 7835331 rules fired and 1323839 states in the queue.
	1500000 states explored in 121.18s, with 8378515 rules fired and 1418589 states in the queue.
	1600000 states explored in 128.90s, with 8932928 rules fired and 1513370 states in the queue.
	1700000 states explored in 136.42s, with 9471750 rules fired and 1607655 states in the queue.
	1800000 states explored in 144.33s, with 10043112 rules fired and 1702532 states in the queue.
	1900000 states explored in 152.18s, with 10611848 rules fired and 1797397 states in the queue.
	2000000 states explored in 159.60s, with 11137000 rules fired and 1892086 states in the queue.
	2100000 states explored in 167.16s, with 11681668 rules fired and 1986848 states in the queue.
	2200000 states explored in 174.78s, with 12228224 rules fired and 2080988 states in the queue.
	2300000 states explored in 182.67s, with 12789544 rules fired and 2175166 states in the queue.
	2400000 states explored in 190.71s, with 13361731 rules fired and 2269125 states in the queue.
	2500000 states explored in 198.63s, with 13929909 rules fired and 2363529 states in the queue.
	2600000 states explored in 206.41s, with 14483645 rules fired and 2457854 states in the queue.
	2700000 states explored in 214.49s, with 15057400 rules fired and 2551681 states in the queue.

Error:

	Internal Error: Too many active states.




This program should be regarded as a DEBUGGING aid, not as a 
certifier of correctness.
Call with the -l flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.

Bugs, questions, and comments should be directed to
"melatti@di.uniroma1.it".

CMurphi compiler last modified date: Apr 18 2024
Include files last modified date:    Jul 23 2021
==========================================================================

==========================================================================
Caching Murphi Release 5.5.0
Finite-state Concurrent System Verifier.

Caching Murphi Release 5.5.0 is based on various versions of Murphi.
Caching Murphi Release 5.5.0 :
Copyright (C) 2009-2012 by Sapienza University of Rome.
Murphi release 3.1 :
Copyright (C) 1992 - 1999 by the Board of Trustees of
Leland Stanford Junior University.

==========================================================================

Protocol: ./protocols/exec/TL-C_NonIn_M_data/TL-C_NonIn_M_data_inv103
===========================================
  You are using LS algorithm.  
===========================================

===== Startstates are generated! =====
Carelist Layer 0: Tree[1].cache[1].state Tree[2].cache[1].state Tree[3].cache[1].state Tree[4].cache[1].state Tree[5].cache[1].state Tree[6].cache[1].state Tree[7].cache[1].state 
Carelist Layer 1: Tree[node].chanA[node].opcode Tree[node].chanA[node].para Tree[node].chanA[node].addr Tree[node].cache[node].state Tree[node].directory[node][node] Tree[node].master_pending[node] Tree[node].chanC[node].opcode Tree[node].chanB[node].opcode Tree[node].chanB[node].para Tree[node].chanB[node].addr Tree[node].chanD[node].opcode Tree[node].chanD[node].para Tree[node].chanD[node].addr Tree[node].chanC[node].para Tree[node].chanC[node].addr Tree[node].slave_pending[node][node] 
Carelist Layer 2: Tree[node].chanE[node].opcode Tree[node].chanE[node].addr 
Attr: Tree[node].chanE[node].opcode Level: 2 Wi: 2
Attr: Tree[node].chanC[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanC[node].para Level: 1 Wi: 4
Attr: Tree[node].chanD[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanD[node].opcode Level: 1 Wi: 4
Attr: Tree[node].slave_pending[node][node] Level: 1 Wi: 4
Attr: Tree[6].cache[1].state Level: 0 Wi: 8
Attr: Tree[2].cache[1].state Level: 0 Wi: 8
Attr: Tree[5].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanB[node].addr Level: 1 Wi: 4
Attr: Tree[4].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanD[node].para Level: 1 Wi: 4
Attr: Tree[node].master_pending[node] Level: 1 Wi: 4
Attr: Tree[3].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].cache[node].state Level: 1 Wi: 4
Attr: Tree[7].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanA[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanA[node].para Level: 1 Wi: 4
Attr: Tree[node].directory[node][node] Level: 1 Wi: 4
Attr: Tree[node].chanA[node].addr Level: 1 Wi: 4
Attr: Tree[1].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanC[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanB[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanE[node].addr Level: 2 Wi: 2
Attr: Tree[node].chanB[node].para Level: 1 Wi: 4

===== Init heuristics! =====

Progress Report:

	100000 states explored in 7.06s, with 274699 rules fired and 91032 states in the queue.
	200000 states explored in 13.47s, with 663506 rules fired and 173349 states in the queue.
	300000 states explored in 20.37s, with 1082526 rules fired and 254749 states in the queue.
	400000 states explored in 28.02s, with 1547724 rules fired and 330892 states in the queue.
	500000 states explored in 34.06s, with 1914555 rules fired and 412924 states in the queue.
	600000 states explored in 38.79s, with 2196440 rules fired and 498220 states in the queue.
	700000 states explored in 42.73s, with 2431302 rules fired and 588570 states in the queue.
	800000 states explored in 46.38s, with 2650321 rules fired and 680078 states in the queue.
	900000 states explored in 50.03s, with 2868794 rules fired and 771312 states in the queue.
	1000000 states explored in 53.91s, with 3100374 rules fired and 861596 states in the queue.
	1100000 states explored in 57.54s, with 3317087 rules fired and 952481 states in the queue.
	1200000 states explored in 61.21s, with 3532970 rules fired and 1043963 states in the queue.
	1300000 states explored in 65.32s, with 3781754 rules fired and 1134553 states in the queue.
	1400000 states explored in 68.42s, with 3967641 rules fired and 1229757 states in the queue.
	1500000 states explored in 72.78s, with 4228514 rules fired and 1319101 states in the queue.
	1600000 states explored in 76.50s, with 4445506 rules fired and 1410513 states in the queue.
	1700000 states explored in 79.77s, with 4636725 rules fired and 1505019 states in the queue.
	1800000 states explored in 83.25s, with 4839579 rules fired and 1598369 states in the queue.
	1900000 states explored in 86.80s, with 5048568 rules fired and 1690153 states in the queue.
	2000000 states explored in 90.28s, with 5250595 rules fired and 1782989 states in the queue.
	2100000 states explored in 94.15s, with 5481939 rules fired and 1875003 states in the queue.
	2200000 states explored in 99.51s, with 5807151 rules fired and 1960649 states in the queue.
	2300000 states explored in 105.40s, with 6163667 rules fired and 2042504 states in the queue.
	2400000 states explored in 112.13s, with 6570364 rules fired and 2119253 states in the queue.
	2500000 states explored in 115.48s, with 6765110 rules fired and 2212276 states in the queue.
	2600000 states explored in 120.06s, with 7039805 rules fired and 2300662 states in the queue.
	2700000 states explored in 123.91s, with 7268359 rules fired and 2392558 states in the queue.
	2800000 states explored in 128.23s, with 7528788 rules fired and 2482769 states in the queue.
	2900000 states explored in 132.55s, with 7786284 rules fired and 2571989 states in the queue.

Error:

	Internal Error: Too many active states.




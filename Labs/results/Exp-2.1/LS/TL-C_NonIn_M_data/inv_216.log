This program should be regarded as a DEBUGGING aid, not as a 
certifier of correctness.
Call with the -l flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.

Bugs, questions, and comments should be directed to
"melatti@di.uniroma1.it".

CMurphi compiler last modified date: Jul 24 2024
Include files last modified date:    Jul 23 2021
==========================================================================

==========================================================================
Caching Murphi Release 5.5.0
Finite-state Concurrent System Verifier.

Caching Murphi Release 5.5.0 is based on various versions of Murphi.
Caching Murphi Release 5.5.0 :
Copyright (C) 2009-2012 by Sapienza University of Rome.
Murphi release 3.1 :
Copyright (C) 1992 - 1999 by the Board of Trustees of
Leland Stanford Junior University.

==========================================================================

Protocol: ./protocols/exec/TL-C_NonIn_M_data/TL-C_NonIn_M_data_inv216
===========================================
  You are using EDMC algorithm.  
===========================================

===== Startstates are generated! =====
Carelist Layer 0: Tree[1].cache[1].state Tree[2].cache[1].state Tree[3].cache[1].state Tree[4].cache[1].state Tree[5].cache[1].state Tree[6].cache[1].state Tree[7].cache[1].state 
Carelist Layer 1: Tree[node].chanA[node].opcode Tree[node].chanA[node].para Tree[node].chanA[node].addr Tree[node].cache[node].state Tree[node].directory[node][node] Tree[node].master_pending[node] Tree[node].chanC[node].opcode Tree[node].chanB[node].opcode Tree[node].chanB[node].para Tree[node].chanB[node].addr Tree[node].chanD[node].opcode Tree[node].chanD[node].para Tree[node].chanD[node].addr Tree[node].chanC[node].para Tree[node].chanC[node].addr Tree[node].slave_pending[node][node] 
Carelist Layer 2: Tree[node].chanE[node].opcode Tree[node].chanE[node].addr 
Attr: Tree[node].chanE[node].opcode Level: 2 Wi: 2
Attr: Tree[node].chanC[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanC[node].para Level: 1 Wi: 4
Attr: Tree[node].chanD[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanD[node].opcode Level: 1 Wi: 4
Attr: Tree[node].slave_pending[node][node] Level: 1 Wi: 4
Attr: Tree[6].cache[1].state Level: 0 Wi: 8
Attr: Tree[2].cache[1].state Level: 0 Wi: 8
Attr: Tree[5].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanB[node].addr Level: 1 Wi: 4
Attr: Tree[4].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanD[node].para Level: 1 Wi: 4
Attr: Tree[node].master_pending[node] Level: 1 Wi: 4
Attr: Tree[3].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].cache[node].state Level: 1 Wi: 4
Attr: Tree[7].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanA[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanA[node].para Level: 1 Wi: 4
Attr: Tree[node].directory[node][node] Level: 1 Wi: 4
Attr: Tree[node].chanA[node].addr Level: 1 Wi: 4
Attr: Tree[1].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanC[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanB[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanE[node].addr Level: 2 Wi: 2
Attr: Tree[node].chanB[node].para Level: 1 Wi: 4

===== Init heuristics! =====

Progress Report:

	100000 states explored in 4.15s, with 145770 rules fired and 81579 states in the queue.
	200000 states explored in 5.86s, with 297773 rules fired and 163967 states in the queue.
	300000 states explored in 7.74s, with 465378 rules fired and 244297 states in the queue.
	400000 states explored in 9.54s, with 628849 rules fired and 326095 states in the queue.
	500000 states explored in 11.35s, with 798750 rules fired and 408991 states in the queue.
	600000 states explored in 13.22s, with 972666 rules fired and 491210 states in the queue.
	700000 states explored in 15.05s, with 1135935 rules fired and 572775 states in the queue.
	800000 states explored in 17.05s, with 1319451 rules fired and 652634 states in the queue.
	900000 states explored in 18.99s, with 1494729 rules fired and 732885 states in the queue.
	1000000 states explored in 20.96s, with 1675983 rules fired and 812832 states in the queue.
	1100000 states explored in 22.92s, with 1855722 rules fired and 892996 states in the queue.
	1200000 states explored in 25.03s, with 2055201 rules fired and 972893 states in the queue.
	1300000 states explored in 27.18s, with 2257934 rules fired and 1052434 states in the queue.
	1400000 states explored in 28.97s, with 2424740 rules fired and 1135649 states in the queue.
	1500000 states explored in 30.91s, with 2612510 rules fired and 1218790 states in the queue.
	1600000 states explored in 32.85s, with 2797372 rules fired and 1301815 states in the queue.
	1700000 states explored in 34.66s, with 2970975 rules fired and 1385523 states in the queue.
	1800000 states explored in 36.62s, with 3162878 rules fired and 1468525 states in the queue.
	1900000 states explored in 38.60s, with 3348800 rules fired and 1549751 states in the queue.
	2000000 states explored in 40.76s, with 3555249 rules fired and 1629304 states in the queue.
	2100000 states explored in 42.61s, with 3731345 rules fired and 1712356 states in the queue.
	2200000 states explored in 44.51s, with 3918887 rules fired and 1795502 states in the queue.
	2300000 states explored in 46.43s, with 4102023 rules fired and 1877930 states in the queue.
	2400000 states explored in 48.19s, with 4267102 rules fired and 1961872 states in the queue.
	2500000 states explored in 50.09s, with 4449162 rules fired and 2045001 states in the queue.
	2600000 states explored in 52.07s, with 4634780 rules fired and 2127209 states in the queue.
	2700000 states explored in 54.10s, with 4827894 rules fired and 2207651 states in the queue.
	2800000 states explored in 56.16s, with 5024917 rules fired and 2287929 states in the queue.
	2900000 states explored in 57.97s, with 5200379 rules fired and 2371664 states in the queue.
	3000000 states explored in 59.91s, with 5389696 rules fired and 2454625 states in the queue.
	3100000 states explored in 61.85s, with 5571590 rules fired and 2536811 states in the queue.

Error:

	Internal Error: Too many active states.




This program should be regarded as a DEBUGGING aid, not as a 
certifier of correctness.
Call with the -l flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.

Bugs, questions, and comments should be directed to
"melatti@di.uniroma1.it".

CMurphi compiler last modified date: Jul 24 2024
Include files last modified date:    Jul 23 2021
==========================================================================

==========================================================================
Caching Murphi Release 5.5.0
Finite-state Concurrent System Verifier.

Caching Murphi Release 5.5.0 is based on various versions of Murphi.
Caching Murphi Release 5.5.0 :
Copyright (C) 2009-2012 by Sapienza University of Rome.
Murphi release 3.1 :
Copyright (C) 1992 - 1999 by the Board of Trustees of
Leland Stanford Junior University.

==========================================================================

Protocol: ./protocols/exec/TL-C_NonIn_M_data/TL-C_NonIn_M_data_inv215
===========================================
  You are using EDMC algorithm.  
===========================================

===== Startstates are generated! =====
Carelist Layer 0: Tree[1].cache[1].state Tree[2].cache[1].state Tree[3].cache[1].state Tree[4].cache[1].state Tree[5].cache[1].state Tree[6].cache[1].state Tree[7].cache[1].state 
Carelist Layer 1: Tree[node].chanA[node].opcode Tree[node].chanA[node].para Tree[node].chanA[node].addr Tree[node].cache[node].state Tree[node].directory[node][node] Tree[node].master_pending[node] Tree[node].chanC[node].opcode Tree[node].chanB[node].opcode Tree[node].chanB[node].para Tree[node].chanB[node].addr Tree[node].chanD[node].opcode Tree[node].chanD[node].para Tree[node].chanD[node].addr Tree[node].chanC[node].para Tree[node].chanC[node].addr Tree[node].slave_pending[node][node] 
Carelist Layer 2: Tree[node].chanE[node].opcode Tree[node].chanE[node].addr 
Attr: Tree[node].chanE[node].opcode Level: 2 Wi: 2
Attr: Tree[node].chanC[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanC[node].para Level: 1 Wi: 4
Attr: Tree[node].chanD[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanD[node].opcode Level: 1 Wi: 4
Attr: Tree[node].slave_pending[node][node] Level: 1 Wi: 4
Attr: Tree[6].cache[1].state Level: 0 Wi: 8
Attr: Tree[2].cache[1].state Level: 0 Wi: 8
Attr: Tree[5].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanB[node].addr Level: 1 Wi: 4
Attr: Tree[4].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanD[node].para Level: 1 Wi: 4
Attr: Tree[node].master_pending[node] Level: 1 Wi: 4
Attr: Tree[3].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].cache[node].state Level: 1 Wi: 4
Attr: Tree[7].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanA[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanA[node].para Level: 1 Wi: 4
Attr: Tree[node].directory[node][node] Level: 1 Wi: 4
Attr: Tree[node].chanA[node].addr Level: 1 Wi: 4
Attr: Tree[1].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanC[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanB[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanE[node].addr Level: 2 Wi: 2
Attr: Tree[node].chanB[node].para Level: 1 Wi: 4

===== Init heuristics! =====

Progress Report:

	100000 states explored in 4.04s, with 141849 rules fired and 83755 states in the queue.
	200000 states explored in 5.69s, with 291264 rules fired and 167041 states in the queue.
	300000 states explored in 7.38s, with 449121 rules fired and 250608 states in the queue.
	400000 states explored in 9.06s, with 605193 rules fired and 334050 states in the queue.
	500000 states explored in 10.82s, with 771142 rules fired and 417289 states in the queue.
	600000 states explored in 12.62s, with 940642 rules fired and 500370 states in the queue.
	700000 states explored in 14.48s, with 1107706 rules fired and 582151 states in the queue.
	800000 states explored in 16.49s, with 1290222 rules fired and 661935 states in the queue.
	900000 states explored in 18.53s, with 1479598 rules fired and 742240 states in the queue.
	1000000 states explored in 20.72s, with 1686313 rules fired and 821783 states in the queue.
	1100000 states explored in 22.56s, with 1851944 rules fired and 903700 states in the queue.
	1200000 states explored in 24.22s, with 2003762 rules fired and 986983 states in the queue.
	1300000 states explored in 25.98s, with 2163370 rules fired and 1069573 states in the queue.
	1400000 states explored in 27.68s, with 2319232 rules fired and 1153271 states in the queue.
	1500000 states explored in 29.51s, with 2490338 rules fired and 1236411 states in the queue.
	1600000 states explored in 31.39s, with 2664139 rules fired and 1318560 states in the queue.
	1700000 states explored in 33.56s, with 2868088 rules fired and 1398341 states in the queue.
	1800000 states explored in 35.46s, with 3044217 rules fired and 1480692 states in the queue.
	1900000 states explored in 37.36s, with 3226874 rules fired and 1563946 states in the queue.
	2000000 states explored in 39.26s, with 3408623 rules fired and 1647098 states in the queue.
	2100000 states explored in 41.28s, with 3598006 rules fired and 1728447 states in the queue.
	2200000 states explored in 43.47s, with 3803269 rules fired and 1808093 states in the queue.
	2300000 states explored in 45.62s, with 4008393 rules fired and 1888869 states in the queue.
	2400000 states explored in 47.99s, with 4236843 rules fired and 1968291 states in the queue.
	2500000 states explored in 49.94s, with 4414738 rules fired and 2050329 states in the queue.
	2600000 states explored in 51.96s, with 4598380 rules fired and 2131143 states in the queue.
	2700000 states explored in 53.64s, with 4756332 rules fired and 2214830 states in the queue.
	2800000 states explored in 55.46s, with 4929056 rules fired and 2297757 states in the queue.
	2900000 states explored in 57.12s, with 5082728 rules fired and 2381571 states in the queue.
	3000000 states explored in 58.94s, with 5255859 rules fired and 2464619 states in the queue.
	3100000 states explored in 60.76s, with 5424774 rules fired and 2547220 states in the queue.

Error:

	Internal Error: Too many active states.



